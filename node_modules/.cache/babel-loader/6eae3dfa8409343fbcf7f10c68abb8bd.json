{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoruiyan/Desktop/todolist/src/components/TodoList.js\";\nimport { toBeChecked } from \"@testing-library/jest-dom/dist/matchers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoList = _ref => {\n  let {\n    todoList,\n    setTodoList\n  } = _ref;\n\n  function isChecked(id) {\n    if (el.id === id) {\n      el.isChecked = true;\n    }\n\n    return el;\n  }\n\n  function onClickDelete(id) {\n    const updatedArr = todoList.map(el => {\n      if (el.id === id) {\n        el.isDeleted = true;\n      }\n\n      return el;\n    });\n    setTodoList(updatedArr);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: todoList.map((_ref2, index) => {\n        let {\n          content,\n          isDeleted,\n          id,\n          isChecked\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [content, /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              textDecoration: isChecked ? \"line-through\" : \"\"\n            },\n            onClick: () => isChecked(id),\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)]\n        }, `${content}+${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["toBeChecked","TodoList","todoList","setTodoList","isChecked","id","el","onClickDelete","updatedArr","map","isDeleted","index","content","textDecoration"],"sources":["/Users/xiaoruiyan/Desktop/todolist/src/components/TodoList.js"],"sourcesContent":["import { toBeChecked } from \"@testing-library/jest-dom/dist/matchers\"\nexport const TodoList=({todoList,setTodoList})=>{\n  \n    function isChecked(id){\n      if(el.id === id){\n          el.isChecked = true\n      }  \n      return el\n    }\n    function onClickDelete(id){\n        const updatedArr = todoList.map((el)=>{\n            if (el.id === id){\n                el.isDeleted = true\n            }\n            return el       \n        }) \n        setTodoList(updatedArr)\n    }\n    return(\n        <>\n        <ol>\n            {todoList.map(({content,isDeleted,id,isChecked},index)=>{\n                return(\n                    <li key={`${content}+${index}`}>\n                    {content}\n                    {/* <button onClick={onClickDelete(id)}>delete</button> */}\n                    <input \n                    style={{ textDecoration:isChecked ? \"line-through\":\"\"}}\n                    onClick={()=>isChecked(id)}\n                    type=\"checkbox\"/>\n                    </li>\n                )\n            })}\n        </ol>\n        </>\n    )\n}"],"mappings":";AAAA,SAASA,WAAT,QAA4B,yCAA5B;;;AACA,OAAO,MAAMC,QAAQ,GAAC,QAA0B;EAAA,IAAzB;IAACC,QAAD;IAAUC;EAAV,CAAyB;;EAE5C,SAASC,SAAT,CAAmBC,EAAnB,EAAsB;IACpB,IAAGC,EAAE,CAACD,EAAH,KAAUA,EAAb,EAAgB;MACZC,EAAE,CAACF,SAAH,GAAe,IAAf;IACH;;IACD,OAAOE,EAAP;EACD;;EACD,SAASC,aAAT,CAAuBF,EAAvB,EAA0B;IACtB,MAAMG,UAAU,GAAGN,QAAQ,CAACO,GAAT,CAAcH,EAAD,IAAM;MAClC,IAAIA,EAAE,CAACD,EAAH,KAAUA,EAAd,EAAiB;QACbC,EAAE,CAACI,SAAH,GAAe,IAAf;MACH;;MACD,OAAOJ,EAAP;IACH,CALkB,CAAnB;IAMAH,WAAW,CAACK,UAAD,CAAX;EACH;;EACD,oBACI;IAAA,uBACA;MAAA,UACKN,QAAQ,CAACO,GAAT,CAAa,QAAkCE,KAAlC,KAA0C;QAAA,IAAzC;UAACC,OAAD;UAASF,SAAT;UAAmBL,EAAnB;UAAsBD;QAAtB,CAAyC;QACpD,oBACI;UAAA,WACCQ,OADD,eAGA;YACA,KAAK,EAAE;cAAEC,cAAc,EAACT,SAAS,GAAG,cAAH,GAAkB;YAA5C,CADP;YAEA,OAAO,EAAE,MAAIA,SAAS,CAACC,EAAD,CAFtB;YAGA,IAAI,EAAC;UAHL;YAAA;YAAA;YAAA;UAAA,QAHA;QAAA,GAAU,GAAEO,OAAQ,IAAGD,KAAM,EAA7B;UAAA;UAAA;UAAA;QAAA,QADJ;MAUH,CAXA;IADL;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAkBH,CAnCM;KAAMV,Q"},"metadata":{},"sourceType":"module"}