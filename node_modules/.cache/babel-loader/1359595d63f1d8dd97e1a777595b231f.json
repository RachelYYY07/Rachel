{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoruiyan/Desktop/todolist/src/components/TodoInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoInput = _ref => {\n  _s();\n\n  let {\n    todoList,\n    setTodoList\n  } = _ref;\n  const [inputValue, setInputValue] = useState(\"\");\n\n  function onClickChecked(id) {\n    const checkedArr = todoList.map(el => {\n      if (el.id === id) {\n        el.isChecked = true;\n      }\n\n      return el;\n    });\n    setTodoList(checkedArr);\n  }\n\n  function onClickAdd() {\n    setTodoList([...todoList, {\n      content: inputValue,\n      isDeleted: false,\n      id: todoList.length,\n      isChecked: false\n    }]);\n    setInputValue(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isChecked && /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        textDecoration: isChecked ? \"line-through\" : \"text\"\n      },\n      value: inputValue,\n      type: \"text\",\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickAdd,\n      children: \" Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoInput, \"rsMI/utR3VPdN6BwWe1FNIwfp3k=\");\n\n_c = TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["useState","TodoInput","todoList","setTodoList","inputValue","setInputValue","onClickChecked","id","checkedArr","map","el","isChecked","onClickAdd","content","isDeleted","length","textDecoration","e","target","value"],"sources":["/Users/xiaoruiyan/Desktop/todolist/src/components/TodoInput.js"],"sourcesContent":["import { useState } from 'react'\nexport const TodoInput=({todoList, setTodoList}) => {\n    const[inputValue,setInputValue]=useState(\"\")\n    function onClickChecked(id){\n        const checkedArr = todoList.map((el)=>{\n            if(el.id === id) {\n                el.isChecked = true\n            }\n            return el\n        })\n        setTodoList(checkedArr)\n        }\n    function onClickAdd(){\n\n       setTodoList([...todoList, {content:inputValue,isDeleted:false,id:todoList.length,isChecked:false}])\n       setInputValue(\"\") \n    } \n    return(\n        <>\n        {!isChecked && \n        <input style={{ textDecoration:isChecked ? \"line-through\":\"text\"}}\n        value={inputValue}\n        type=\"text\"\n        onChange={(e)=>setInputValue(e.target.value)}/>}\n        <button onClick={onClickAdd}> Add </button>\n        \n        </>\n         \n        \n    )\n\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,OAAO,MAAMC,SAAS,GAAC,QAA6B;EAAA;;EAAA,IAA5B;IAACC,QAAD;IAAWC;EAAX,CAA4B;EAChD,MAAK,CAACC,UAAD,EAAYC,aAAZ,IAA2BL,QAAQ,CAAC,EAAD,CAAxC;;EACA,SAASM,cAAT,CAAwBC,EAAxB,EAA2B;IACvB,MAAMC,UAAU,GAAGN,QAAQ,CAACO,GAAT,CAAcC,EAAD,IAAM;MAClC,IAAGA,EAAE,CAACH,EAAH,KAAUA,EAAb,EAAiB;QACbG,EAAE,CAACC,SAAH,GAAe,IAAf;MACH;;MACD,OAAOD,EAAP;IACH,CALkB,CAAnB;IAMAP,WAAW,CAACK,UAAD,CAAX;EACC;;EACL,SAASI,UAAT,GAAqB;IAElBT,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;MAACW,OAAO,EAACT,UAAT;MAAoBU,SAAS,EAAC,KAA9B;MAAoCP,EAAE,EAACL,QAAQ,CAACa,MAAhD;MAAuDJ,SAAS,EAAC;IAAjE,CAAd,CAAD,CAAX;IACAN,aAAa,CAAC,EAAD,CAAb;EACF;;EACD,oBACI;IAAA,WACC,CAACM,SAAD,iBACD;MAAO,KAAK,EAAE;QAAEK,cAAc,EAACL,SAAS,GAAG,cAAH,GAAkB;MAA5C,CAAd;MACA,KAAK,EAAEP,UADP;MAEA,IAAI,EAAC,MAFL;MAGA,QAAQ,EAAGa,CAAD,IAAKZ,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;IAH5B;MAAA;MAAA;MAAA;IAAA,QAFA,eAMA;MAAQ,OAAO,EAAEP,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANA;EAAA,gBADJ;AAcH,CA9BM;;GAAMX,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}